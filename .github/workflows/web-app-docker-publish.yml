name: Models web app Docker Publisher
on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master
      - release-*

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

env:
  IMG: kserve/models-web-app
  ARCH: linux/ppc64le,linux/amd64,linux/arm64

jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Run tests
        run: |
            make docker-build

  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    # Ensure test job passes before pushing image.
    needs: test

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: ppc64le,arm64

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: export version variable
        run: |
          # Strip git ref prefix from version
          TAG=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Use Docker `latest` tag convention
          [ "$TAG" == "master" ] && VERSION=latest

          echo TAG=$TAG >> $GITHUB_ENV

      - name: Build and push multi-arch docker image
        run: |
          make docker-build-push-multi-arch
