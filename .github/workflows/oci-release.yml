name: Models Web Application OCI image Publisher (Releasing)

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master
      - release-*

    paths:
      - releasing/VERSION

  # Run tests for any PRs.
  pull_request:

env:
  IMAGE_NAME: models-web-application

jobs:
  # Run tests.
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Run tests
        run: |
          docker build . --file Dockerfile

  # Push image to GitHub Container Registry.
  push:
    # Ensure test job passes before pushing image.
    needs: test

    runs-on: ubuntu-latest
    # Only run on push events, not PRs to the trigger branches/paths
    if: github.event_name == 'push'
    permissions:
      packages: write
      contents: read

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for OCI image
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
          tags: |
            # Get version from file for release branches/master
            type=raw,value={{cat ./releasing/VERSION}}

      - name: Build and push OCI image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
