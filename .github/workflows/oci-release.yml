name: Models Web Application OCI Container Publisher

on:
  push:
    # Publish `master` as `latest` OCI image.
    branches:
    - master
    - v*

    # Publish `v1.2.3` tags as releases.
    tags:
    - v*

  # Run tests for any PRs.
  pull_request:

env:
  PLATFORMS: linux/ppc64le,linux/amd64,linux/arm64

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Run tests
      run: |
        make docker-build

  push:
    needs: test
    runs-on: ubuntu-latest
    # Only run on push events, not PRs
    if: github.event_name == 'push'
    permissions:
      packages: write
      contents: read

    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      with:
        platforms: amd64,ppc64le,arm64

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log into GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for OCI image
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{ github.repository }}
        tags: |
          type=schedule
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=sha
          # Add 'latest' tag for master branch pushes
          type=raw,value=latest,enable=${{ github.ref == 'refs/heads/master' }}

    - name: Build and push multi-architecture OCI image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        platforms: ${{ env.PLATFORMS }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
