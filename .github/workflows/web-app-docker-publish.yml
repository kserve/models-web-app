name: Models web app Docker Publisher

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master
      - release-*
    
    # Publish `v1.2.3` tags as releases.
    tags:
      - v*
  
  # Run tests for any PRs.
  pull_request:

env:
  ARCH: linux/ppc64le,linux/amd64,linux/arm64

jobs:
  # Run tests.
  test:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2
      
      - name: Run tests
        run: |
          make docker-build
  
  # Push image to GitHub Container Registry.
  push:
    # Ensure test job passes before pushing image.
    needs: test
    
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    permissions:
      packages: write
      contents: read
    
    steps:
      - uses: actions/checkout@v2
      
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: ppc64le,arm64
      
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Export version variable
        run: |
          # Strip git ref prefix from version
          TAG=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          
          # Use Docker `latest` tag convention
          [ "$TAG" == "master" ] && VERSION=latest
          
          echo TAG=$TAG >> $GITHUB_ENV
      
      - name: Build and push multi-arch docker image
        run: |
          make docker-build-push-multi-arch GITHUB_REPOSITORY_OWNER=${{ github.repository_owner }}